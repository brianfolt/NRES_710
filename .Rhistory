age <- round(runif(n_snakes, 3, 10), 0) # Age - uniformly distributed between 3 and 10 years old
# X2 data - clutch laid in wild or captivity
wild <- rbinom(size = 1, n = n_snakes, prob = 0.6) # 1 = laid in wild; 0 = laid in captivity
# Response variable
mean_clutch <- exp(1 + 0.1*age + 1.5*wild) # y_hat; the mean clutch size for each snake, given effects
clutch_size <- rep(NA, n_snakes)
# Response variable
for (i in 1:n_snakes){
clutch_size[i] <- rpois(1, mean_clutch[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual snake
}
# Save the data
datum <- data.frame(Age = age, Wild = wild, MeanClutchSize = mean_clutch, ClutchSize = clutch_size)
# Save the data
write.csv(datum, "lecture_GLM_dataset1.csv", row.names = FALSE)
write.csv(datum, "../datasets/lecture_GLM_dataset1.csv", row.names = FALSE)
hist(clutch_size)
clutch_size
set.seed(123)
# Sample size
n_snakes <- 45 # Sample size
# X1 data - age
age <- round(runif(n_snakes, 3, 10), 0) # Age - uniformly distributed between 3 and 10 years old
# X2 data - clutch laid in wild or captivity
wild <- rbinom(size = 1, n = n_snakes, prob = 0.6) # 1 = laid in wild; 0 = laid in captivity
# Response variable
mean_clutch <- exp(0 + 0.1*age + 1.5*wild) # y_hat; the mean clutch size for each snake, given effects
clutch_size <- rep(NA, n_snakes)
# Response variable
for (i in 1:n_snakes){
clutch_size[i] <- rpois(1, mean_clutch[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual snake
}
# Save the data
datum <- data.frame(Age = age, Wild = wild, MeanClutchSize = mean_clutch, ClutchSize = clutch_size)
# Save the data
write.csv(datum, "lecture_GLM_dataset1.csv", row.names = FALSE)
write.csv(datum, "../datasets/lecture_GLM_dataset1.csv", row.names = FALSE)
hist(clutch_size)
# Load the data
datum <- read.csv("lecture_GLM_dataset1.csv")
head(datum, 20)
head(datum, 20)
# Plot it
plot(ClutchSize ~ Age, data = datum)
plot(ClutchSize ~ Age, data = datum)
# Plot it
plot(ClutchSize ~ Age, data = datum, pch = as.numeric(datum$Wild))
plot(ClutchSize ~ Age, data = datum, pch = as.numeric(datum$Wild))
datum
set.seed(123)
# Sample size
n_snakes <- 45 # Sample size
# X1 data - age
age <- round(runif(n_snakes, 3, 10), 0) # Age - uniformly distributed between 3 and 10 years old
# X2 data - clutch laid in wild or captivity
wild <- rbinom(size = 1, n = n_snakes, prob = 0.5) # 1 = laid in wild; 0 = laid in captivity
# Response variable
mean_clutch <- exp(0 + 0.1*age + 1.5*wild) # y_hat; the mean clutch size for each snake, given effects
clutch_size <- rep(NA, n_snakes)
# Response variable
for (i in 1:n_snakes){
clutch_size[i] <- rpois(1, mean_clutch[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual snake
}
# Save the data
datum <- data.frame(Age = age, Wild = wild, MeanClutchSize = mean_clutch, ClutchSize = clutch_size)
# Save the data
write.csv(datum, "lecture_GLM_dataset1.csv", row.names = FALSE)
write.csv(datum, "../datasets/lecture_GLM_dataset1.csv", row.names = FALSE)
datum <- data.frame(Age = age, Wild = wild, MeanClutchSize = mean_clutch, ClutchSize = clutch_size)datum <- read.csv("lecture_GLM_dataset1.csv")
plot(ClutchSize ~ Age, data = datum, pch = as.numeric(datum$Wild))
# Examine the 'glm()' function
help(glm)
# Yes, I forgot to specify the 'family' statement to use a Poisson distribution!
# Re-run it correctly while specifying the 'family' statement
results2 <- glm(ClutchSize ~ Age + Wild, data = datum, family = "poisson")
summary(results2)
e^1.52
exp(1.52)
confint(results2)
exp(1.21)
exp(1.84)
exp(0.07)
exp(-0.002731)
exp(0.1446)
1.07 * 1.07 * 1.07 * 1.07 * 1.07 * 1.07
rmd2rscript(infile = "./materials_/lecture_GLMs.Rmd", outdir = "datasets/")
#rmd2rscript(infile = "./materials_/lecture_20.Rmd", outdir = "datasets/") # no r code
#rmd2rscript(infile = "./materials_/lecture_21.Rmd", outdir = "datasets/") # no r code
rmd2rscript(infile = "./materials_/lecture_GLM.Rmd", outdir = "datasets/")
rmarkdown::render('materials_/lecture_GLM.Rmd', 'word_document')
rmarkdown::render('materials_/lecture_21.Rmd', 'word_document')
0.6^5
?rbinom()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE
)
### Dataset 1
# Simulate mortality of individuals depending on age and whether they were born
# in captivity or in the wild
set.seed(123)
# Sample size
n_snakes <- 40 # Sample size
# X1 data - age
age <- runif(n_snakes, 1, 10) # Age - uniformly distributed between 1 and 10 years old
# X2 data - born in wild or captivity
wild <- rbinom(size = 1, n = n_snakes, prob = 0.5) # 1 = born in wild; 0 = laid in captivity
# Response variable
mean_mortality <- exp(-2 + 1.5*wild + 0.5*age)/(1 + exp(-2 + 1.5*wild + 0.5*age))
# y_hat; the mean mortality rate for each snake, given effects
mortality <- rep(NA, n_snakes)
# Response variable
for (i in 1:n_snakes){
mortality[i] <- rbinom(1, mean_mortality[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual
}
i
rbinom(1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
rbinom(1, 1, mean_mortality[i])
for (i in 1:n_snakes){
mortality[i] <- rbinom(1, 1, mean_mortality[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual
}
mortality
# Save the data
datum <- data.frame(Age = age, Wild = wild, MeanMortality = mean_mortality, Mortality = mortality)
# Save the data
write.csv(datum, "lecture_GLM2_dataset1.csv", row.names = FALSE)
write.csv(datum, "../datasets/lecture_GLM2_dataset1.csv", row.names = FALSE)
datum
datum
### Dataset 2
# Simulate reproduction of snakes (clutch size) as a product of age, where they
# reproduced, and body condition
set.seed(123)
# Sample size
n_snakes <- 45 # Sample size
# X1 data - age
age <- round(runif(n_snakes, 1, 10), 0) # Age - uniformly distributed between 1 and 10 years old
# X2 data - clutch laid in wild or captivity
wild <- rbinom(size = 1, n = n_snakes, prob = 0.5) # 1 = laid in wild; 0 = laid in captivity
# X3 data - body condition
body_condition <- 0.1 + runif(n_snakes, 0, 1)*0.4
# Response variable
mean_clutch <- exp(0 + 2*body_condition + 1.5*wild - 0.2*age) # y_hat; the mean clutch size for each snake, given effects
clutch_size <- rep(NA, n_snakes)
# Response variable
for (i in 1:n_snakes){
clutch_size[i] <- rpois(1, mean_clutch[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual snake
}
# Save the data
datum <- data.frame(Age = age, Wild = wild, BodyCondition = body_condition, MeanClutchSize = mean_clutch, ClutchSize = clutch_size)
# Save the data
write.csv(datum, "lecture_GLM2_dataset2.csv", row.names = FALSE)
write.csv(datum, "../datasets/lecture_GLM2_dataset2.csv", row.names = FALSE)
age <- round(runif(n_snakes, 1, 10), 0) # Age - uniformly distributed between 1 and 10 years old
age
### Dataset 1
# Simulate mortality of individuals depending on age and whether they were born
# in captivity or in the wild
set.seed(123)
# Sample size
n_snakes <- 40 # Sample size
# X1 data - age
age <- round(runif(n_snakes, 1, 10), 0) # Age - uniformly distributed between 1 and 10 years old
# X2 data - born in wild or captivity
wild <- rbinom(size = 1, n = n_snakes, prob = 0.5) # 1 = born in wild; 0 = laid in captivity
# Response variable
mean_mortality <- exp(-2 + 1.5*wild + 0.5*age)/(1 + exp(-2 + 1.5*wild + 0.5*age))
# y_hat; the mean mortality rate for each snake, given effects
mortality <- rep(NA, n_snakes)
# Response variable
for (i in 1:n_snakes){
mortality[i] <- rbinom(1, 1, mean_mortality[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual
}
# Save the data
datum <- data.frame(Age = age, Wild = wild, MeanMortality = mean_mortality, Mortality = mortality)
# Save the data
write.csv(datum, "lecture_GLM2_dataset1.csv", row.names = FALSE)
write.csv(datum, "../datasets/lecture_GLM2_dataset1.csv", row.names = FALSE)
### Dataset 2
# Simulate reproduction of snakes (clutch size) as a product of age, where they
# reproduced, and body condition
set.seed(123)
# Sample size
n_snakes <- 45 # Sample size
# X1 data - age
age <- round(runif(n_snakes, 1, 10), 0) # Age - uniformly distributed between 1 and 10 years old
# X2 data - clutch laid in wild or captivity
wild <- rbinom(size = 1, n = n_snakes, prob = 0.5) # 1 = laid in wild; 0 = laid in captivity
# X3 data - body condition
body_condition <- 0.1 + runif(n_snakes, 0, 1)*0.4
# Response variable
mean_clutch <- exp(0 + 2*body_condition + 1.5*wild - 0.2*age) # y_hat; the mean clutch size for each snake, given effects
clutch_size <- rep(NA, n_snakes)
# Response variable
for (i in 1:n_snakes){
clutch_size[i] <- rpois(1, mean_clutch[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual snake
}
# Save the data
datum <- data.frame(Age = age, Wild = wild, BodyCondition = body_condition, MeanClutchSize = mean_clutch, ClutchSize = clutch_size)
# Save the data
write.csv(datum, "lecture_GLM2_dataset2.csv", row.names = FALSE)
write.csv(datum, "../datasets/lecture_GLM2_dataset2.csv", row.names = FALSE)
set.seed(123)
# Sample size
n_snakes <- 60 # Sample size
# X1 data - age
age <- round(runif(n_snakes, 1, 10), 0) # Age - uniformly distributed between 1 and 10 years old
# X2 data - born in wild or captivity
wild <- rbinom(size = 1, n = n_snakes, prob = 0.5) # 1 = mother born in wild; 0 = mother born in captivity
# Response variable
mean_mortality <- exp(-2 + 1.5*wild + 0.5*age)/(1 + exp(-2 + 1.5*wild + 0.5*age))
# y_hat; the mean mortality rate for each snake, given effects
mortality <- rep(NA, n_snakes)
# Response variable
for (i in 1:n_snakes){
mortality[i] <- rbinom(1, 1, mean_mortality[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual
}
# Save the data
datum <- data.frame(Age = age, Wild = wild, MeanMortality = mean_mortality, Mortality = mortality)
# Save the data
write.csv(datum, "lecture_GLM2_dataset1.csv", row.names = FALSE)
write.csv(datum, "../datasets/lecture_GLM2_dataset1.csv", row.names = FALSE)
### Dataset 2
# Simulate reproduction of snakes (clutch size) as a product of age, where they
# reproduced, and body condition
set.seed(123)
# Sample size
n_snakes <- 45 # Sample size
# X1 data - age
age <- round(runif(n_snakes, 1, 10), 0) # Age - uniformly distributed between 1 and 10 years old
# X2 data - clutch laid in wild or captivity
wild <- rbinom(size = 1, n = n_snakes, prob = 0.5) # 1 = laid in wild; 0 = laid in captivity
# X3 data - body condition
body_condition <- 0.1 + runif(n_snakes, 0, 1)*0.4
# Response variable
mean_clutch <- exp(0 + 2*body_condition + 1.5*wild - 0.2*age) # y_hat; the mean clutch size for each snake, given effects
clutch_size <- rep(NA, n_snakes)
# Response variable
for (i in 1:n_snakes){
clutch_size[i] <- rpois(1, mean_clutch[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual snake
}
# Save the data
datum <- data.frame(Age = age, Wild = wild, BodyCondition = body_condition, MeanClutchSize = mean_clutch, ClutchSize = clutch_size)
# Save the data
write.csv(datum, "lecture_GLM2_dataset2.csv", row.names = FALSE)
write.csv(datum, "../datasets/lecture_GLM2_dataset2.csv", row.names = FALSE)
results <- glm(Mortality ~ Age + Wild, data = datum, family = "binomial")
datum <- read.csv("lecture_GLM2_dataset1.csv")
results <- glm(Mortality ~ Age + Wild, data = datum, family = "binomial")
summary(results)
str(summary(results))
summary(results)$coefficients["Wild",1]
summary(results)$coefficients["Wild","Estimate"]
set.seed(122)
# Sample size
n_snakes <- 60 # Sample size
# X1 data - age
age <- round(runif(n_snakes, 1, 10), 0) # Age - uniformly distributed between 1 and 10 years old
# X2 data - born in wild or captivity
wild <- rbinom(size = 1, n = n_snakes, prob = 0.5) # 1 = mother born in wild; 0 = mother born in captivity
# Response variable
mean_mortality <- exp(-2 + 1.5*wild + 0.5*age)/(1 + exp(-2 + 1.5*wild + 0.5*age))
# y_hat; the mean mortality rate for each snake, given effects
mortality <- rep(NA, n_snakes)
# Response variable
for (i in 1:n_snakes){
mortality[i] <- rbinom(1, 1, mean_mortality[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual
}
# Save the data
datum <- data.frame(Age = age, Wild = wild, MeanMortality = mean_mortality, Mortality = mortality)
# Save the data
write.csv(datum, "lecture_GLM2_dataset1.csv", row.names = FALSE)
write.csv(datum, "../datasets/lecture_GLM2_dataset1.csv", row.names = FALSE)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE
)
yr_since_burn <- rpois(n_sites, 8)
## Set up study design
# Plots
n_sites <- 100
# yr_since_burn
yr_since_burn <- rpois(n_sites, 8)
yr_since_burn
hist(yr_since_burn)
yr_since_burn <- rpois(n_sites, 5)
yr_since_burn
?rpois()
set.seed(123) # For reproducibility
mean_lambda <- 10  # Mean of the Poisson component
dispersion <- 2    # Dispersion parameter (larger values = less overdispersion)
# Simulate data
data <- rnbinom(100, size = 1 / dispersion, mu = mean_lambda)
data
hist(data)
# Simulate data
yr_since_burn <- rnbinom(n_sites, size = 1 / dispersion, mu = mean_lambda)
yr_since_burn
hist(yr_since_burn)
# sagebrush density
sagebrush <- runif(nsites, 10, 200)
# sagebrush density
sagebrush <- runif(n_sites, 10, 200)
sagebrush
# sagebrush density
sagebrush <- round(runif(n_sites, 10, 200), 1)
sagebrush
hist(sagebrush)
# water source presence
water <- rbinom(n_sites, 1, 0.4)
water
## Set up study design
# Plots
n_sites <- 100
# yr_since_burn
mean_lambda <- 10  # Mean of the Poisson component
dispersion <- 2    # Dispersion parameter (larger values = less overdispersion)
yr_since_burn <- rnbinom(n_sites, size = 1 / dispersion, mu = mean_lambda)
# sagebrush density
sagebrush <- round(runif(n_sites, 10, 200), 1)
# water source presence
water <- rbinom(n_sites, 1, 0.4)
# Response variable -- bird presence
mean_presence <- exp(-3 + 0.03*yr_since_burn + 0.01*sagebrush + 2*water)/(1 + exp(-3 + 0.03*yr_since_burn + 0.01*sagebrush + 2*water))
mean_presence
hist(mean_presence)
# Response variable - data
Presence <- rep(NA, n_sites)
for (i in 1:n_sites){
Presence[i] <- rbinom(1, 1, mean_presence[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual
}
Presence
# Response variable - data
presence <- rep(NA, n_sites)
for (i in 1:n_sites){
presence[i] <- rbinom(1, 1, mean_presence[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual
}
# Save the data
datum <- data.frame(YearSinceBurn = yr_since_burn, SageDensity = sagebrush, Water = water, Presence = presence)
# Save the CSV file
write.csv(datum, "exercise_8_dataset1.csv", row.names = FALSE)
datum
datum
results <- glm(Presence ~ YearSinceBurn + SageDensity + Water, data = datum, family = binomial)
summary(results)
### Dataset 1
# Simulate study design with four sites; each site has four plots; each plot receives one of four treatments; each plot has four different samples.
set.seed(111) # Reproducibility
## Set up study design
# Plots
n_sites <- 100
# yr_since_burn
mean_lambda <- 10  # Mean of the Poisson component
dispersion <- 2    # Dispersion parameter (larger values = less overdispersion)
yr_since_burn <- rnbinom(n_sites, size = 1 / dispersion, mu = mean_lambda)
# sagebrush density
sagebrush <- round(runif(n_sites, 10, 200), 1)
# water source presence
water <- rbinom(n_sites, 1, 0.4)
# Response variable -- bird presence
mean_presence <- exp(-3 + 0.03*yr_since_burn + 0.01*sagebrush + 2*water)/(1 + exp(-3 + 0.03*yr_since_burn + 0.01*sagebrush + 2*water))
# Response variable - data
presence <- rep(NA, n_sites)
for (i in 1:n_sites){
presence[i] <- rbinom(1, 1, mean_presence[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual
}
# Save the data
datum <- data.frame(YearSinceBurn = yr_since_burn, SageDensity = sagebrush, Water = water, Presence = presence)
# Save the CSV file
write.csv(datum, "exercise_8_dataset1.csv", row.names = FALSE)
results <- glm(Presence ~ YearSinceBurn + SageDensity + Water, data = datum, family = binomial)
summary(results)
# Response variable -- bird presence
mean_presence <- exp(-3 + 0.05*yr_since_burn + 0.01*sagebrush + 2*water)/(1 + exp(-3 + 0.03*yr_since_burn + 0.01*sagebrush + 2*water))
# Response variable - data
presence <- rep(NA, n_sites)
for (i in 1:n_sites){
presence[i] <- rbinom(1, 1, mean_presence[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual
}
# Save the data
datum <- data.frame(YearSinceBurn = yr_since_burn, SageDensity = sagebrush, Water = water, Presence = presence)
# Save the CSV file
write.csv(datum, "exercise_8_dataset1.csv", row.names = FALSE)
results <- glm(Presence ~ YearSinceBurn + SageDensity + Water, data = datum, family = binomial)
summary(results)
# Response variable -- bird presence
mean_presence <- exp(-3 + 0.04*yr_since_burn + 0.01*sagebrush + 2*water)/(1 + exp(-3 + 0.03*yr_since_burn + 0.01*sagebrush + 2*water))
# Response variable - data
presence <- rep(NA, n_sites)
for (i in 1:n_sites){
presence[i] <- rbinom(1, 1, mean_presence[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual
}
hist(mean_presence)
mean_presence
# Response variable -- bird presence
mean_presence <- exp(-3 + 0.035*yr_since_burn + 0.01*sagebrush + 2*water)/(1 + exp(-3 + 0.03*yr_since_burn + 0.01*sagebrush + 2*water))
# Response variable - data
presence <- rep(NA, n_sites)
for (i in 1:n_sites){
presence[i] <- rbinom(1, 1, mean_presence[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual
}
# Save the data
datum <- data.frame(YearSinceBurn = yr_since_burn, SageDensity = sagebrush, Water = water, Presence = presence)
# Save the CSV file
write.csv(datum, "exercise_8_dataset1.csv", row.names = FALSE)
results <- glm(Presence ~ YearSinceBurn + SageDensity + Water, data = datum, family = binomial)
summary(results)
mean_presence
max(mean_presence)
rmarkdown::render('materials_/lecture_GLM2.Rmd', 'word_document')
rmarkdown::render('materials_/lecture_GLM2.Rmd', 'word_document')
rmarkdown::render('materials_/lecture_GLM2.Rmd', 'word_document')
habitat <- rep(c("desert", "grassland", "sagebrush"), each = 33)
habitat
## Set up study design
# Plots
n_sites <- 120
# habitat type
habitat <- rep(c("desert", "grassland", "sagebrush"), each = n_sites/3)
habitat
model.matrix(habitat - 1)
# habitat type
habitat <- rep(c("desert", "grassland", "sagebrush"), each = n_sites/3)
dummy <- data.frame(model.matrix(~ habitat - 1))
colnames(dummy) <- c("Desert", "Grassland", "Sagebrush")
dummy
dummyu
dummy
# understory density
understory <- round(runif(n_sites, 0, 100), 1)
understory
# understory density
understory <- round(runif(n_sites, 0, 100), 0)
understory
## Set up study design
# Plots
n_sites <- 120
# habitat type
habitat <- rep(c("desert", "grassland", "sagebrush"), each = n_sites/3)
dummy <- data.frame(model.matrix(~ habitat - 1))
colnames(dummy) <- c("Desert", "Grassland", "Sagebrush")
# understory density
understory <- round(runif(n_sites, 0, 100), 0)
# Response variable -- predicted number of bird species
mean_species <- exp(0 + 2*dummy$Grassland + 1.2*dummy$Sagebrush + 0.015*understory) # y_hat; mean predicted number of species per area
mean_species
no_species <- rep(NA, n_sites)
# Response variable
for (i in 1:n_sites){
no_species[i] <- rpois(1, mean_species[i])
# y_i - simulated each observation of y_i using a random process but given the y_hat mean for each individual snake
}
set.seed(111) # Reproducibility
## Set up study design
# Plots
n_sites <- 120
# habitat type
habitat <- rep(c("desert", "grassland", "sagebrush"), each = n_sites/3)
dummy <- data.frame(model.matrix(~ habitat - 1))
colnames(dummy) <- c("Desert", "Grassland", "Sagebrush")
# understory density
understory <- round(runif(n_sites, 0, 100), 0)
# Response variable -- predicted number of bird species
mean_species <- exp(0 + 2*dummy$Grassland + 1.2*dummy$Sagebrush + 0.015*understory) # y_hat; mean predicted number of species per area
no_species <- rep(NA, n_sites)
# Response variable
for (i in 1:n_sites){
no_species[i] <- rpois(1, mean_species[i])
# y_i - simulate each observation of y_i using a random process but given the y_hat mean for each site
}
no_species
# Save the data
datum <- data.frame(Habitat = habitat, Desert = dummy$Desert, Grassland = dummy$Grassland, Sagebrush = dummy$Sagebrush, SpeciesCount = no_species)
datum
# Save the data
datum <- data.frame(Habitat = habitat, Desert = dummy$Desert, Grassland = dummy$Grassland, Sagebrush = dummy$Sagebrush, UnderstoryDensity = understory, SpeciesCount = no_species)
datum
# Save the CSV file
write.csv(datum, "exercise_8_dataset2.csv", row.names = FALSE)
