### Dataset 1
# Sample size
n <- 60
# Road density
RoadDensity <- runif(n, 0, 1) * 10
# Forest type
g <- 2 # number of groups
ForestType <- factor(c(rep("Aspen", n/g), rep("Pine", n/g)))
# Dummy-code the ForestType
dummy <- data.frame(model.matrix(~ ForestType - 1))
colnames(dummy) <- c("Aspen", "Pine")
# Error
Error <- rnorm(n, mean = 0, sd = 1)
# Response variable
Squirrels <- 10 - 0.5*RoadDensity + 1*dummy$Pine - 0.5*dummy$Pine*RoadDensity + Error
# Dataframe
datum <- data.frame(RoadDensity, ForestType, dummy$Pine, Squirrels)
# Save the CSV file
write.csv(datum, "exercise_5_dataset1.csv", row.names = FALSE)
### Dataset 2
# Sample size
n <- 100
# Sex
g <- 2 # number of groups
Sex <- factor(c(rep("Females", n/g), rep("Males", n/g)))
Treatment <- rep(c(rep("Control", 25), rep( "Treatment", 25)), 2)
# Dummy-code the Sex
dummySex <- data.frame(model.matrix(~ Sex - 1))
colnames(dummySex) <- c("Female", "Male")
# Dummy-code the Treatment
dummyTreatment <- data.frame(model.matrix(~ Treatment - 1))
colnames(dummyTreatment) <- c("Control", "Treatment")
# Error
Error <- rnorm(n, mean = 0, sd = 0.2)
# Response variable
Size <- 1.5 + 0.5*dummySex$Male + 0.5*dummyTreatment$Treatment + 0.5*dummySex$Male*dummyTreatment$Treatment + Error
# Dataframe
datum <- data.frame(Sex, dummySex$Male, Treatment, dummyTreatment$Treatment, Size)
# Save the CSV file
write.csv(datum, "exercise_5_dataset2.csv", row.names = FALSE)
set.seed(123)
### Dataset 1
# Sample size
n <- 60
# Road density
RoadDensity <- runif(n, 0, 1) * 10
# Forest type
g <- 2 # number of groups
ForestType <- factor(c(rep("Aspen", n/g), rep("Pine", n/g)))
# Dummy-code the ForestType
dummy <- data.frame(model.matrix(~ ForestType - 1))
colnames(dummy) <- c("Aspen", "Pine")
# Error
Error <- rnorm(n, mean = 0, sd = 1)
# Response variable
Squirrels <- 10 - 0.5*RoadDensity + 1*dummy$Pine - 0.5*dummy$Pine*RoadDensity + Error
# Dataframe
datum <- data.frame(RoadDensity, ForestType, dummy$Pine, Squirrels)
colnames(datum) < - c("RoadDensity", "ForestType", "Pine", "Squirrels")
datum
datum
colnames(datum) < - c("RoadDensity", "ForestType", "Pine", "Squirrels")
colnames(datum) <- c("RoadDensity", "ForestType", "Pine", "Squirrels")
datum
datum
write.csv(datum, "exercise_5_dataset1.csv", row.names = FALSE)
n <- 100
# Sex
g <- 2 # number of groups
Sex <- factor(c(rep("Females", n/g), rep("Males", n/g)))
Treatment <- rep(c(rep("Control", 25), rep( "Treatment", 25)), 2)
# Dummy-code the Sex
dummySex <- data.frame(model.matrix(~ Sex - 1))
colnames(dummySex) <- c("Female", "Male")
# Dummy-code the Treatment
dummyTreatment <- data.frame(model.matrix(~ Treatment - 1))
colnames(dummyTreatment) <- c("Control", "Treatment")
# Error
Error <- rnorm(n, mean = 0, sd = 0.2)
# Response variable
Size <- 1.5 + 0.5*dummySex$Male + 0.5*dummyTreatment$Treatment + 0.5*dummySex$Male*dummyTreatment$Treatment + Error
# Dataframe
datum <- data.frame(Sex, dummySex$Male, Treatment, dummyTreatment$Treatment, Size)
colnames(datum) <- c("Sex", "Male", "Treatment", "Treated", "Size")
# Save the CSV file
write.csv(datum, "exercise_5_dataset2.csv", row.names = FALSE)
### Function to convert RMD files to R scripts
rmd2rscript <- function(infile="LECTURE2.Rmd"){
outfile <- gsub(".Rmd",".R",infile)
close(file(outfile, open="w"))   # clear output file
con1 <- file(infile, open="r")
con2 <- file(outfile, "w")
stringToFind <- "```{r*"
stringToFind2 <- "echo"
isrblock <- FALSE
#count=0
blocknum=0
while(length(input <- readLines(con1, n=1)) > 0){   # while there are still lines to be read
isrblock <- grepl(input, pattern = stringToFind, perl = TRUE)   # is it the start of an R block?
showit <- !grepl(input, pattern = stringToFind2, perl = TRUE)   # is it hidden (echo=FALSE)
if(isrblock){
blocknum=blocknum+1
while(!grepl(newline<-readLines(con1, n=1),pattern="```",perl=TRUE)){
if((blocknum>1)&((showit)|(blocknum==2))) write(newline,file=con2,append=TRUE)
#count=count+1
}
isrblock=FALSE
}
}
closeAllConnections()
}
rmd2rscript("materials/lecture_13.Rmd")
rmd2rscript("materials/lecture_13.Rmd")
rmarkdown::render('materials/lecture_15.Rmd', 'word_document')
rmd2rscript("materials/lecture_15.Rmd")
rmd2rscript("materials/lecture_15.Rmd")
rmarkdown::render('materials/lecture_16.Rmd', 'word_document')
rmarkdown::render('materials/lecture_16.Rmd', 'word_document')
library(nlme)
help(lme)
rmd2rscript("materials/lecture_17.Rmd")
rmarkdown::render('materials/lecture_17.Rmd', 'word_document')
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE
)
### Dataset 2
# Set the seed for reproducibility
set.seed(122)
n_treatments <- 4
Fields <- rep(1:8, n_treatments)
Fertilizer <- c(rep(0, n_fields), rep(1, n_fields), rep(0, n_fields), rep(1, n_fields))
Hormone <- c(rep(0, n_fields), rep(0, n_fields), rep(1, n_fields), rep(1, n_fields))
# Error due to field
FieldError <- rep(rnorm(n_fields, 0, 6.5), each = n_treatments)
# Residual error
ResidError <- rnorm(n_treatments * n_fields, 0, 1)
# Response variable
Size <- 50 + 9*Fertilizer + 3*Hormone + FieldError + ResidError
# Create dataframe
datum <- data.frame(Fields=Fields, Fertilizer=Fertilizer, Hormone=Hormone, FieldError=FieldError, ResidError=ResidError, Size=Size)
# Save the CSV file
write.csv(datum, "exercise_6_dataset2.csv", row.names = FALSE)
### Dataset 2
# Set the seed for reproducibility
set.seed(122)
# X-variables
n_fields <- 8
n_treatments <- 4
Fields <- rep(1:8, n_treatments)
Fertilizer <- c(rep(0, n_fields), rep(1, n_fields), rep(0, n_fields), rep(1, n_fields))
Hormone <- c(rep(0, n_fields), rep(0, n_fields), rep(1, n_fields), rep(1, n_fields))
# Error due to field
FieldError <- rep(rnorm(n_fields, 0, 6.5), each = n_treatments)
# Residual error
ResidError <- rnorm(n_treatments * n_fields, 0, 1)
# Response variable
Size <- 50 + 9*Fertilizer + 3*Hormone + FieldError + ResidError
# Create dataframe
datum <- data.frame(Fields=Fields, Fertilizer=Fertilizer, Hormone=Hormone, FieldError=FieldError, ResidError=ResidError, Size=Size)
# Save the CSV file
write.csv(datum, "exercise_6_dataset2.csv", row.names = FALSE)
ResidError
FieldError
set.seed(122)
# X-variables
n_fields <- 50
n_treatments <- 4
Fields <- rep(1:n_fields, n_treatments)
Fertilizer <- c(rep(0, n_fields), rep(1, n_fields), rep(0, n_fields), rep(1, n_fields))
Hormone <- c(rep(0, n_fields), rep(0, n_fields), rep(1, n_fields), rep(1, n_fields))
# Error due to field
FieldError <- rep(rnorm(n_fields, 0, 6.5), each = n_treatments)
# Residual error
ResidError <- rnorm(n_treatments * n_fields, 0, 1)
# Response variable
Size <- 50 + 9*Fertilizer + 3*Hormone + FieldError + ResidError
# Create dataframe
datum <- data.frame(Fields=Fields, Fertilizer=Fertilizer, Hormone=Hormone, FieldError=FieldError, ResidError=ResidError, Size=Size)
# Save the CSV file
write.csv(datum, "exercise_6_dataset2.csv", row.names = FALSE)
set.seed(121)
# X-variables
n_fields <- 20
n_treatments <- 4
Fields <- rep(1:n_fields, n_treatments)
Fertilizer <- c(rep(0, n_fields), rep(1, n_fields), rep(0, n_fields), rep(1, n_fields))
Hormone <- c(rep(0, n_fields), rep(0, n_fields), rep(1, n_fields), rep(1, n_fields))
# Error due to field
FieldError <- rep(rnorm(n_fields, 0, 6.5), each = n_treatments)
# Residual error
ResidError <- rnorm(n_treatments * n_fields, 0, 1)
# Response variable
Size <- 50 + 9*Fertilizer + 3*Hormone + FieldError + ResidError
# Create dataframe
datum <- data.frame(Fields=Fields, Fertilizer=Fertilizer, Hormone=Hormone, FieldError=FieldError, ResidError=ResidError, Size=Size)
# Save the CSV file
write.csv(datum, "exercise_6_dataset2.csv", row.names = FALSE)
# X-variables
n_trees <- 16
years <- 10:20
n_years <- length(years)
Individual <- rep(1:16, n_years)
Age <- years
Individual
Individual <- sort(rep(1:16, n_years))
Individual
### Dataset 3
# Set the seed for reproducibility
set.seed(123)
# X-variables
n_trees <- 16
years <- 10:20
n_years <- length(years)
Individual <- sort(rep(1:16, n_years))
Age <- years
# Tree error
TreeError <- rep(rnorm(n_trees, 0, 10), each = n_years)
# Residual error
ResidError <- matrix(NA, n_trees * n_years, 1)
ResidError[1,1] <- rnorm(1, mean = 0, sd = 12)
for (i in 2:(n_trees * n_years)){
ResidError[i,1] <- rnorm(1, mean = ResidError[i-1, 1], sd = 1)
}
# Response variable
Size <- 20 + 1*Age + TreeError + ResidError
# Create dataframe
datum <- data.frame(Individual=Individual, Age=Age, TreeError=TreeError, ResidError=ResidError, Size=Size)
set.seed(123)
# X-variables
n_trees <- 16
years <- 10:20
n_years <- length(years)
Individual <- sort(rep(1:16, n_years))
Age <- years
# Tree error
TreeError <- rep(rnorm(n_trees, 0, 10), each = n_years)
# Residual error
ResidError <- matrix(NA, n_trees * n_years, 1)
ResidError[1,1] <- rnorm(1, mean = 0, sd = 12)
for (i in 2:(n_trees * n_years)){
ResidError[i,1] <- rnorm(1, mean = ResidError[i-1, 1], sd = 1)
}
# Response variable
Size <- 20 + 1*Age + TreeError + ResidError
# Create dataframe
datum <- data.frame(Individual=Individual, Age=Age, TreeError=TreeError, ResidError=ResidError, Size=Size)
# Save the CSV file
write.csv(datum, "exercise_6_dataset3.csv", row.names = FALSE)
Fields <- rep(1:n_fields, n_treatments)
Fields
set.seed(121)
# X-variables
n_fields <- 20
n_treatments <- 4
Fields <- sort(rep(1:n_fields, n_treatments))
Fertilizer <- c(rep(0, n_fields), rep(1, n_fields), rep(0, n_fields), rep(1, n_fields))
Hormone <- c(rep(0, n_fields), rep(0, n_fields), rep(1, n_fields), rep(1, n_fields))
# Error due to field
FieldError <- rep(rnorm(n_fields, 0, 6.5), each = n_treatments)
# Residual error
ResidError <- rnorm(n_treatments * n_fields, 0, 1)
# Response variable
Size <- 50 + 9*Fertilizer + 3*Hormone + FieldError + ResidError
# Create dataframe
datum <- data.frame(Fields=Fields, Fertilizer=Fertilizer, Hormone=Hormone, FieldError=FieldError, ResidError=ResidError, Size=Size)
# Save the CSV file
write.csv(datum, "exercise_6_dataset2.csv", row.names = FALSE)
### Dataset 3
# Set the seed for reproducibility
set.seed(123)
# X-variables
n_trees <- 16
years <- 10:20
n_years <- length(years)
Individual <- sort(rep(1:16, n_years))
Age <- years
# Tree error
TreeError <- rep(rnorm(n_trees, 0, 10), each = n_years)
# Residual error
ResidError <- matrix(NA, n_trees * n_years, 1)
ResidError[1,1] <- rnorm(1, mean = 0, sd = 12)
for (i in 2:(n_trees * n_years)){
ResidError[i,1] <- rnorm(1, mean = ResidError[i-1, 1], sd = 1)
}
# Response variable
Size <- 20 + 1*Age + TreeError + ResidError
# Create dataframe
datum <- data.frame(Individual=Individual, Age=Age, TreeError=TreeError, ResidError=ResidError, Size=Size)
# Save the CSV file
write.csv(datum, "exercise_6_dataset3.csv", row.names = FALSE)
set.seed(123)
# Simulate data
n_basins <- 10
Basin <- sort(c(rep(1:Basin, 5)))
Basin <- sort(c(rep(1:n_basins, 5)))
# Continuous X-variable
SoilMoisture <- runif(length(Basin), 0, 1)
# Basin error (matching the number of samples for each basin)
BasinError <- c(rep(rnorm(Basin, 0, 5), each = 5))
# Field X SoilMoisture interaction error (matching the number of samples for each field)
BasinXMoistureError <- c(rep(rnorm(Basin, 0, 3), each = 5))
# Within-basin error
Error <- rnorm(length(Basin), 0, 1)
# Response variable
Biomass <- 25 + 10*SoilMoisture + SoilMoisture*BasinXMoistureError + BasinError + Error
# Save the data
datum <- data.frame(Basin = Basin, SoilMoisture = SoilMoisture, BasinXMoistureError = BasinXMoistureError, BasinError = BasinError, Error = Error, Biomass = Biomass)
# Save the data
write.csv(datum, "exercise_6_dataset4.csv", row.names = FALSE)
rmarkdown::render('materials/lecture_18.Rmd', 'word_document')
rmarkdown::render('materials/lecture_19.Rmd', 'word_document')
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE
)
### Dataset 2
# Simulate nested-design data
set.seed(123)
# Fields
n_fields <- 24
n_plots <- 3
n_treatments <- 2
Field <- sort(rep(rep(1:n_fields, n_plots), n_treatments))
# Plots
Plot <- rep(c(rep(1, n_treatments), rep(2, n_treatments), rep(3, n_treatments)), n_fields)
# Treatments
Treatment <- rep(rep(c(0, 1), n_plots), n_fields)
# Field error
FieldError <- rep(rnorm(n_fields, 0, 1), each = n_plots * n_treatments)
# Plot error
PlotError <- rep(rnorm(n_plots * n_fields, 0, 2), each = n_treatments)
# Residual error
Error <- rnorm(length(Field), 0, 1)
# Response variable -- biomass
Biomass <- 20 + 10*Treatment + FieldError + PlotError + Error
# Plot order: plots numbered from 1 to 72
PlotOrder <- rep(1:(n_fields*n_plots), each = n_treatments)
# Save the data
datum <- data.frame(Field = Field, Plot = Plot, Treatment = Treatment, FieldError = FieldError, Error = Error, Biomass = Biomass)
# Save the data
write.csv(datum, "lecture_18_dataset2.csv", row.names = FALSE)
set.seed(123)
# Fields
n_fields <- 24
n_plots <- 3
n_treatments <- 2
Field <- sort(rep(rep(1:n_fields, n_plots), n_treatments))
# Plots
Plot <- rep(c(rep(1, n_treatments), rep(2, n_treatments), rep(3, n_treatments)), n_fields)
# Treatments
Treatment <- rep(rep(c(0, 1), n_plots), n_fields)
# Field error
FieldError <- rep(rnorm(n_fields, 0, 1), each = n_plots * n_treatments)
# Plot error
PlotError <- rep(rnorm(n_plots * n_fields, 0, 2), each = n_treatments)
# Residual error
Error <- rnorm(length(Field), 0, 1)
# Response variable -- biomass
Biomass <- 20 + 10*Treatment + FieldError + PlotError + Error
# Plot order: plots numbered from 1 to 72
PlotOrder <- rep(1:(n_fields*n_plots), each = n_treatments)
# Save the data
datum <- data.frame(Field = Field, Plot = Plot, PlotOrder = PlotOrder, Treatment = Treatment, FieldError = FieldError, Error = Error, Biomass = Biomass)
# Save the data
write.csv(datum, "lecture_18_dataset2.csv", row.names = FALSE)
### Dataset 2
# Simulate nested-design data
set.seed(123)
# Fields
n_fields <- 24
n_plots <- 3
n_treatments <- 2
Field <- sort(rep(rep(1:n_fields, n_plots), n_treatments))
# Plots
Plot <- rep(c(rep(1, n_treatments), rep(2, n_treatments), rep(3, n_treatments)), n_fields)
# Treatments
Treatment <- rep(rep(c(0, 1), n_plots), n_fields)
# Field error
FieldError <- rep(rnorm(n_fields, 0, 1), each = n_plots * n_treatments)
# Plot error
PlotError <- rep(rnorm(n_plots * n_fields, 0, 2), each = n_treatments)
# Residual error
Error <- rnorm(length(Field), 0, 1)
# Response variable -- biomass
Biomass <- 20 + 10*Treatment + FieldError + PlotError + Error
# Plot order: plots numbered from 1 to 72
PlotOrder <- rep(1:(n_fields*n_plots), each = n_treatments)
# Save the data
datum <- data.frame(Field = Field, Plot = Plot, PlotOrder = PlotOrder, Treatment = Treatment, FieldError = FieldError, Error = Error, Biomass = Biomass)
# Save the data
write.csv(datum, "lecture_18_dataset2.csv", row.names = FALSE)
set.seed(123)
# Fields
n_fields <- 24
n_plots <- 3
n_treatments <- 2
Field <- sort(rep(rep(1:n_fields, n_plots), n_treatments))
# Plots
Plot <- rep(c(rep(1, n_treatments), rep(2, n_treatments), rep(3, n_treatments)), n_fields)
# Treatments
Treatment <- rep(rep(c(0, 1), n_plots), n_fields)
# Field error
FieldError <- rep(rnorm(n_fields, 0, 1), each = n_plots * n_treatments)
# Plot error
PlotError <- rep(rnorm(n_plots * n_fields, 0, 2), each = n_treatments)
# Residual error
Error <- rnorm(length(Field), 0, 1)
# Response variable -- biomass
Biomass <- 20 + 10*Treatment + FieldError + PlotError + Error
# Plot order: plots numbered from 1 to 72
PlotOrder <- rep(1:(n_fields*n_plots), each = n_treatments)
# Save the data
datum <- data.frame(Field = Field, Plot = Plot, PlotOrder = PlotOrder, Treatment = Treatment, FieldError = FieldError, Error = Error, Biomass = Biomass)
# Save the data
write.csv(datum, "./materials/lecture_18_dataset2.csv", row.names = FALSE)
set.seed(123)
# Fields
n_fields <- 24
n_plots <- 3
n_treatments <- 2
Field <- sort(rep(rep(1:n_fields, n_plots), n_treatments))
# Plots
Plot <- rep(c(rep(1, n_treatments), rep(2, n_treatments), rep(3, n_treatments)), n_fields)
# Treatments
Treatment <- rep(rep(c(0, 1), n_plots), n_fields)
# Field error
FieldError <- rep(rnorm(n_fields, 0, 1), each = n_plots * n_treatments)
# Plot error
PlotError <- rep(rnorm(n_plots * n_fields, 0, 2), each = n_treatments)
# Residual error
Error <- rnorm(length(Field), 0, 1)
# Response variable -- biomass
Biomass <- 20 + 10*Treatment + FieldError + PlotError + Error
# Plot order: plots numbered from 1 to 72
PlotOrder <- rep(1:(n_fields*n_plots), each = n_treatments)
# Save the data
datum <- data.frame(Field = Field, Plot = Plot, PlotOrder = PlotOrder, Treatment = Treatment, FieldError = FieldError, Error = Error, Biomass = Biomass)
# Save the data
write.csv(datum, "./materials/lecture_18_dataset2.csv", row.names = FALSE)
set.seed(123)
# Fields
n_fields <- 24
n_plots <- 3
n_treatments <- 2
Field <- sort(rep(rep(1:n_fields, n_plots), n_treatments))
# Plots
Plot <- rep(c(rep(1, n_treatments), rep(2, n_treatments), rep(3, n_treatments)), n_fields)
# Treatments
Treatment <- rep(rep(c(0, 1), n_plots), n_fields)
# Field error
FieldError <- rep(rnorm(n_fields, 0, 1), each = n_plots * n_treatments)
# Plot error
PlotError <- rep(rnorm(n_plots * n_fields, 0, 2), each = n_treatments)
# Residual error
Error <- rnorm(length(Field), 0, 1)
# Response variable -- biomass
Biomass <- 20 + 10*Treatment + FieldError + PlotError + Error
# Plot order: plots numbered from 1 to 72
PlotOrder <- rep(1:(n_fields*n_plots), each = n_treatments)
# Save the data
datum <- data.frame(Field = Field, Plot = Plot, PlotOrder = PlotOrder, Treatment = Treatment, FieldError = FieldError, Error = Error, Biomass = Biomass)
# Save the data
write.csv(datum, "lecture_18_dataset2.csv", row.names = FALSE)
rmarkdown::render('materials/lecture_18.Rmd', 'word_document')
rmarkdown::render('materials/lecture_18.Rmd', 'word_document')
rmd2rscript("materials/lecture_18.Rmd")
set.seed(123)
# X-variables
n_fields <- 8
n_treatments <- 3
Fields <- rep(1:n_fields, each = n_treatments)
Treatment <- rep(c("Control", "Pesticide", "PrBurn"), n_fields)
TrtMnt <- rep(c(0,1,1), n_fields)
# Error due to field
FieldError <- rep(rnorm(n_fields, 0, 3.5), each = n_treatments)
# Residual error
ResidError <- rnorm(n_treatments * n_fields, 0, 2)
# Response variable
Density <- 20 - 6*TrtMnt + FieldError + ResidError
# Create dataframe
datum <- data.frame(Fields=Fields, Treatment=Treatment, FieldError=FieldError, ResidError=ResidError, Density=Density)
# Save the CSV file
write.csv(datum, "exercise_6_dataset1.csv", row.names = FALSE)
set.seed(121)
# X-variables
n_fields <- 10
n_treatments <- 4
Fields <- sort(rep(1:n_fields, n_treatments))
Fertilizer <- c(rep(c(0, 1), n_fields * 2))
Hormone <- c(rep(c(0, 0, 1, 1), n_fields))
# Error due to field
FieldError <- rep(rnorm(n_fields, 0, 6.5), each = n_treatments)
# Residual error
ResidError <- rnorm(n_treatments * n_fields, 0, 1)
# Response variable
Size <- 50 + 9*Fertilizer + 3*Hormone + FieldError + ResidError
# Create dataframe
datum <- data.frame(Fields=Fields, Fertilizer=Fertilizer, Hormone=Hormone, FieldError=FieldError, ResidError=ResidError, Size=Size)
# Save the CSV file
write.csv(datum, "exercise_6_dataset2.csv", row.names = FALSE)
rmarkdown::render('materials/lecture_19.Rmd', 'word_document')
rmd2rscript("materials/lecture_19.Rmd")
2e-16
options(scipen = 999)
2e-16
str(summary(results2))
summary(results2)$tTable
