###########################################
# Messing around with probability
###########################################
### Question 1: 
# In 100 coin flips, what are the odds of coming up heads 10x in a row? 

# Number of simulation. The higher this number is, the better our estimates.
# Note: the "L" makes all the values an integer. 
n <- 1e5L
# Number of flips
nflips <- 100L
# How many in a row for a success
comparison <- 10L
# Keep track of "successes"
num_succe <- 0L

# We let 1 represent "heads" and 0 "not heads"
for (i in 1:n) {
  num_succe <- num_succe +
    (max(rle(rbinom(nflips, 1, 0.5))$lengths) >= comparison)
}
# Above, rbinom "generates random deviates" from the binomial distribution"
# rbinom is the number of observations, size (1) is the number of trials,  and 0.5 is the probability
# rle "computes the lengths and values of runs of equal values in a vector" 
# rle can return several things, here we pull "$lengths" which is "an integer vector containing the length of each run"
# max just gives the maximum of the string

# Estimated probability
num_succe / n

# Answer should be: 
# [1] 0.08387


### Question 2
# In six coin tosses, what is the probability of having a different side 
# come up with each throw, that is, that you never get two tails or two heads 
# in a row?

# Number of simulation
n <- 1e5L
# Run length --- Number of flips
nflips <- 6L
# Keep track of "successes"
num_succe <- 0L

# We let 1 represent "heads" and 0 "not heads"
for (i in 1:n) {
  num_succe <- num_succe +
    (max(rle(rbinom(nflips, 1, 0.5))$lengths) == 1L)
}
# Above, rbinom "generates random deviates" from the binomial distribution"
# rbinom is the number of observations, size is the number of trials,  and 0.5 is the probability
# rle "computes the lengths and values of runs of equal values in a vector"
# rle can return several things, here we pull "$lengths" which is "an integer vector containing the length of each run"
# max just gives the maximum of the string

# Estimated probability
num_succe / n

## [1] 0.03175

# Analytical solution
(1/2)^5

## [1] 0.03125

# at the close, i don't bother saving my workspace. save the script! 
